worker_processes auto;  # Automatically sets the number of worker processes based on available CPU cores
pid /run/nginx.pid;  # Specifies the path for the Nginx process ID file
error_log /tmp/error.log;  # Sets the location for the error log
include /usr/share/nginx/modules/*.conf;  # Includes additional Nginx module configuration files
events {  # Defines the events block for worker connections
    worker_connections 1024;  # Sets the maximum number of simultaneous connections per worker
}
http {  # Defines the HTTP configuration block
    log_format   main   '(http) $remote_addr $remote_user [$time_local] "$request" '  # Defines the main log format
                        '$status "$http_referer" >$body_bytes_sent '  # Logs request details such as status and body bytes sent
                        '"$http_user_agent" "$http_x_forwarded_for" '  # Logs user agent and forwarded IP information
                        '"$http_host" "$request_uri" "$http_connection" "$host'  # Logs host and URI details
                        't$request_time ut[$upstream_response_time] "$upstream_addr" '  # Logs request time and upstream response time
                        '"$ssl_client_fingerprint"';  # Logs SSL client fingerprint
    access_log /dev/stdout main;  # Defines the access log location with the 'main' log format
    error_log /dev/stdout debug;  # Defines the error log location with the 'debug' log level
    log_format filebeat_json '{"timestamp": "$time_iso8601",'  # Defines a custom log format for Filebeat in JSON
                            '"level": "",'  # Placeholder for log level
                            '"thread": "",'  # Placeholder for thread information
                            '"rqUID": "$http_rquid",'  # Logs request UID
                            '"source": "$http_source",'  # Logs source information
                            '"process_id": "$http_process_id",'  # Logs process ID
                            '"x_introspect_rquid": "$http_x_introspect_rquid",'  # Logs introspect request UID
                            '"logger": "",'  # Placeholder for logger name
                            '"message": "$remote_addr - $remote_user [$request] '  # Logs request details like remote address, user, and request
                                        '$status $body_bytes_sent [$http_referer] '  # Logs response status, body bytes sent, and referer
                                        '[$http_user_agent] [$http_x_forwarded_for] '  # Logs user agent and forwarded IP information
                                        '$request_time [$upstream_addr] [$upstream_response_time] '  # Logs request time, upstream address, and response time
                                        '[$ssl_client_fingerprint]",'  # Logs SSL client fingerprint
                            '"exception": ""}';  # Placeholder for exception details
    access_log /tmp/app.log filebeat_json;  # Logs access details in the 'filebeat_json' format to a file
    sendfile on;  # Enables efficient file transfers using the sendfile system call
    tcp_nopush on;  # Enables TCP_NOPUSH to send data in larger chunks
    tcp_nodelay on;  # Enables TCP_NODELAY to disable Nagle's algorithm for faster communication
    keepalive_timeout 70;  # Sets the timeout for keepalive connections
    types_hash_max_size 2048;  # Sets the maximum hash table size for MIME types
    server_names_hash_bucket_size 128;  # Sets the bucket size for server name hash tables
    server_tokens off;  # Disables the inclusion of Nginx version in HTTP response headers
    client_body_buffer_size 512k;  # Sets the maximum size of the client body buffer
    client_header_buffer_size 512k;  # Sets the maximum size of the client header buffer
    client_max_body_size 10m;  # Sets the maximum allowed size of client request bodies
    large_client_header_buffers 4 512k;  # Configures buffers for large client headers
    add_header X-Frame-Options SAMEORIGIN;  # Adds a security header to prevent clickjacking
    add_header X-XSS-Protection "1; mode=block";  # Adds a header to enable cross-site scripting protection
    add_header Content-Security-Policy "default-src 'none'";  # Adds a header to prevent any external content from loading
    # Включаем буферизацию ответов и размеры  # Enables response buffering and configures buffer sizes
    proxy_buffering on;  # Enables response buffering for proxied requests
    proxy_busy_buffers_size 512k;  # Sets the maximum size for busy buffers
    proxy_buffers 4 512k;  # Defines the number and size of buffers for proxy responses
    proxy_buffer_size 256k;  # Sets the size of the buffer used for reading responses
    include             /etc/nginx/mime.types;  # Includes the MIME type definitions
    default_type        application/octet-stream;  # Sets the default MIME type for responses
    ssl_session_cache shared:SSL:20m;  # Enables SSL session caching with a shared cache size of 20MB
    include /opt/app-root/etc/nginx.d/custom/ssl/server-ssl.conf;  # Includes custom SSL configuration
    ssl_certificate {{ .Values.projectEgressProxy.vault.MountPath }}/tls.crt;  # Specifies the SSL certificate location
    ssl_certificate_key {{ .Values.projectEgressProxy.vault.MountPath }}/tls.key;  # Specifies the SSL certificate key location
    include /opt/app-root/etc/nginx.d/custom/ssl/proxy-http-ssl.conf;  # Includes additional SSL configuration for proxying
    include /opt/app-root/etc/nginx.d/custom/http/*.conf;  # Includes custom HTTP configurations
}
stream {  # Defines the stream configuration block for TCP/UDP handling
    log_format main ' (stream) $remote_addr [$time_local] '  # Defines the log format for stream connections
                    '$protocol $status >$bytes_sent <$bytes_received '  # Logs protocol, status, and bytes sent/received
                    't$session_time "$upstream_addr" '  # Logs session time and upstream address
                    'u>"$upstream_bytes_sent" u<"$upstream_bytes_received" "$upstream_connect_time"';  # Logs upstream bytes and connection time
    access_log    /dev/stdout main;  # Logs stream access details in 'main' format to stdout
    error_log     /dev/stdout debug;  # Logs stream error details in 'debug' format to stdout
    include /opt/app-root/etc/nginx.d/custom/stream/*.conf;  # Includes custom stream configurations
}
