worker_processes  auto; # Automatically determines the number of worker processes based on the number of CPU cores.
error_log /dev/stdout debug; # Logs error messages to standard output at the debug level.
#error_log  logs/error.log; # (Commented) Logs errors to a file with default log level.
#error_log  logs/error.log  notice; # (Commented) Logs errors to a file at the notice level.
#error_log  logs/error.log  info; # (Commented) Logs errors to a file at the info level.

events {
    worker_connections  1024; # Specifies the maximum number of simultaneous connections that a worker can handle.
}

http {
    default_type  application/octet-stream; # Sets the default MIME type for responses when none is specified.

{{ if not .Values.projectIngressProxy.settings.sslTerminated }}
    map $ssl_client_s_dn $ssl_client_s_dn_cn { # Maps the client SSL certificate subject distinguished name (DN) to extract the common name (CN).
        default ""; # Sets the default value if no match is found.
        ~CN=(?<CN>[^/,\"]+) $CN; # Regex to extract the CN from the subject DN.
    }
{{ end }}

    log_format main '$remote_addr - $remote_user [$time_local] "$request" ' # Defines the main log format for detailed logging.
                    '"$status" $body_bytes_sent "$http_referer" ' # Includes the status, bytes sent, and the HTTP referer.
                    '"$http_user_agent" "$http_x_forwarded_for" ' # Logs the user agent and forwarded IP addresses.
                    '$request_time "$upstream_addr" [$upstream_response_time] ' # Logs request time, upstream server, and response times.

{{ if not .Values.projectIngressProxy.settings.sslTerminated }}
                    'cert_primary: "$ssl_client_s_dn_cn" "$ssl_client_fingerprint" ' # Logs client certificate details if SSL termination is not handled.
                    'cert_thp: "$http_thpcn" "$http_thpfp" ' # Logs additional client-provided certificate headers.
{{ end }}

                    'id: "$http_rquid" "$http_process_id" "$http_x_introspect_rquid" '; # Logs request unique ID and process-related identifiers.

    access_log /dev/stdout main; # Logs access messages to standard output using the main log format.
    error_log /dev/stdout {{ .Values.projectIngressProxy.settings.errorLogLevel | default "debug" }}; # Logs errors to stdout, defaulting to debug level.

    log_format filebeat_json '{"timestamp": "$time_iso8601",' # Defines a JSON-formatted log for integration with Filebeat.
                            '"system_name": "PROJECT",' # Specifies the system name.
                            '"level":"",' # Placeholder for log level.
                            '"input_url": "$request_uri",' # Logs the requested URI.
                            '"thread":"",' # Placeholder for thread information.
                            '"rquid": "$http_rquid",' # Logs the request unique ID.
                            '"process_id": "$http_process_id",' # Logs the process ID.
                            '"source": "$http_source",' # Logs the source header.
                            '"x_introspect_rquid": "$http_x_introspect_rquid",' # Logs the introspection request unique ID.
                            '"logger": "",' # Placeholder for logger details.
                            '"message": "$remote_addr $remote_user [$request] ' # Logs the client IP, user, and request line.
                                        '$status $body_bytes_sent [$http_referer] ' # Logs the response status and bytes sent.
                                        '[$http_user_agent] [$http_x_forwarded_for] ' # Logs the user agent and forwarded IPs.
                                        '$request_time [$upstream_addr] [$upstream_response_time] ' # Logs request timing details.

{{ if not .Values.projectIngressProxy.settings.sslTerminated }}
                                        'cert_primary: [$ssl_client_fingerprint] [$ssl_client_s_dn_cn] ' # Logs primary SSL certificate details if SSL termination is not enabled.
                                        'cert_thp: [$http_thpfp] [$http_thpcn]",' # Logs additional SSL certificate headers.
{{ end }}

                            '"exception":""}'; # Placeholder for exception information in the log.

    access_log /var/log/project/app.log filebeat_json; # Logs access details to a file in the Filebeat JSON format.
    sendfile       on; # Enables the use of sendfile() for efficient file serving.
    tcp_nopush     on; # Reduces network latency for large responses by batching packets.
    keepalive_timeout  65; # Sets the timeout for persistent connections.
    types_hash_max_size 2048; # Configures the size of the types hash table for MIME types.
    server_names_hash_bucket_size 128; # Configures the bucket size for server names to improve performance.
    server_tokens off; # Hides the NGINX version number in server responses.
    client_body_buffer_size 512k; # Configures the buffer size for the client body.
    client_header_buffer_size 512k; # Sets the buffer size for the client request header.
    client_max_body_size 10m; # Limits the maximum size of the client request body.
    large_client_header_buffers 4 512k; # Configures the number and size of buffers for large client headers.
    add_header X-Frame-Options SAMEORIGIN; # Protects against clickjacking by allowing frames only from the same origin.
    add_header X-XSS-Protection "1; mode=block"; # Enables the browser's XSS protection and blocks detected attacks.

    # Enable response buffering and sizes
    proxy_buffering on; # Enables proxy response buffering.
    proxy_busy_buffers_size 512k; # Sets the size of buffers for storing busy responses.
    proxy_buffers 4 512k; # Configures the number and size of buffers for the proxy.
    proxy_buffer_size 256k; # Sets the size of the proxy buffer for response headers.

    include /usr/local/project/nginx/custom/conf/*.conf; # Includes additional custom NGINX configurations from the specified directory.
}
